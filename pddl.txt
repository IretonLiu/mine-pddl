(define (domain first_world)
(:requirements :typing :fluents :negative-preconditions :universal-preconditions :existential-preconditions)
(:types
	locatable - object
	agent block item - locatable
	bedrock destructible-block - block
	oak-log diamond_axe diamond - item
	stone dirt grass_block leaves grass obsidian coal_ore - destructible-block
)
(:predicates
	(block-present ?b - block)
	(item-present ?i - item)
	(agent-alive ?ag - agent)
)
(:functions
	(y ?l - locatable )
	(x ?l - locatable )
	(z ?l - locatable )
	(block-hits ?b - destructible-block )
	(agent-num-diamond ?ag - agent )
	(agent-num-diamond_axe ?ag - agent )
	(agent-num-oak-log ?ag - agent )
)

(:action move-north
	:parameters (?ag - agent)
	:precondition (and (agent-alive ?ag) (not (exists (?b - block) (and (= (x ?b) (x ?ag)) (= (y ?b) (+ (y ?ag) 1)) (= (z ?b) (+ (z ?ag) -1))))))
	:effect (and (decrease (z ?ag) 1))
)


(:action move-south
	:parameters (?ag - agent)
	:precondition (and (agent-alive ?ag) (not (exists (?b - block) (and (= (x ?b) (x ?ag)) (= (y ?b) (+ (y ?ag) 1)) (= (z ?b) (+ (z ?ag) 1))))))
	:effect (and (increase (z ?ag) 1))
)


(:action move-east
	:parameters (?ag - agent)
	:precondition (and (agent-alive ?ag) (not (exists (?b - block) (and (= (x ?b) (+ (x ?ag) 1)) (= (y ?b) (+ (y ?ag) 1)) (= (z ?b) (z ?ag))))))
	:effect (and (increase (x ?ag) 1))
)


(:action move-west
	:parameters (?ag - agent)
	:precondition (and (agent-alive ?ag) (not (exists (?b - block) (and (= (x ?b) (+ (x ?ag) -1)) (= (y ?b) (+ (y ?ag) 1)) (= (z ?b) (z ?ag))))))
	:effect (and (decrease (x ?ag) 1))
)


(:action pickup-oak-log
	:parameters (?ag - agent ?i - oak-log)
	:precondition (and (item-present ?i) (= (x ?i) (x ?ag)) (= (y ?i) (y ?ag)) (= (z ?i) (z ?ag)))
	:effect (and (increase (agent-num-oak-log ?ag) 1) (not (item-present ?i)))
)


(:action drop-oak-log
	:parameters (?ag - agent ?i - oak-log)
	:precondition (and (>= (agent-num-oak-log ?ag) 1) (not (item-present ?i)))
	:effect (and (item-present ?i) (assign (x ?i) (x ?ag)) (assign (y ?i) (y ?ag)) (assign (z ?i) (+ (z ?ag) -1)) (decrease (agent-num-oak-log ?ag) 1))
)


(:action pickup-diamond_axe
	:parameters (?ag - agent ?i - diamond_axe)
	:precondition (and (item-present ?i) (= (x ?i) (x ?ag)) (= (y ?i) (y ?ag)) (= (z ?i) (z ?ag)))
	:effect (and (increase (agent-num-diamond_axe ?ag) 1) (not (item-present ?i)))
)


(:action drop-diamond_axe
	:parameters (?ag - agent ?i - diamond_axe)
	:precondition (and (>= (agent-num-diamond_axe ?ag) 1) (not (item-present ?i)))
	:effect (and (item-present ?i) (assign (x ?i) (x ?ag)) (assign (y ?i) (y ?ag)) (assign (z ?i) (+ (z ?ag) -1)) (decrease (agent-num-diamond_axe ?ag) 1))
)


(:action pickup-diamond
	:parameters (?ag - agent ?i - diamond)
	:precondition (and (item-present ?i) (= (x ?i) (x ?ag)) (= (y ?i) (y ?ag)) (= (z ?i) (z ?ag)))
	:effect (and (increase (agent-num-diamond ?ag) 1) (not (item-present ?i)))
)


(:action drop-diamond
	:parameters (?ag - agent ?i - diamond)
	:precondition (and (>= (agent-num-diamond ?ag) 1) (not (item-present ?i)))
	:effect (and (item-present ?i) (assign (x ?i) (x ?ag)) (assign (y ?i) (y ?ag)) (assign (z ?i) (+ (z ?ag) -1)) (decrease (agent-num-diamond ?ag) 1))
)



)
(define (problem problem)
	(:domain first_world)
(:objects
	steve - agent
	stone0 - stone
	dirt0 - dirt
	grass_block0 - grass_block
	leaves0 leaves1 leaves2 leaves3 leaves4 - leaves
	grass0 grass1 grass2 grass3 - grass
	obsidian0 - obsidian
	coal_ore0 - coal_ore
	oak-log0 - oak-log
	diamond_axe0 - diamond_axe
	diamond0 - diamond
)
(:init
	(agent-alive steve)
	(= (x steve) -260)
	(= (y steve) 86)
	(= (z steve) 173)
	(= (agent-num-oak-log steve) 0)
	(= (agent-num-diamond_axe steve) 0)
	(= (agent-num-diamond steve) 1)
	(item-present oak-log0)
	(= (x oak-log0) -259)
	(= (y oak-log0) 87)
	(= (z oak-log0) 175)
	(item-present diamond_axe0)
	(= (x diamond_axe0) -259)
	(= (y diamond_axe0) 87)
	(= (z diamond_axe0) 175)
	(not (item-present diamond0))
	(= (x diamond0) -260)
	(= (y diamond0) 86)
	(= (z diamond0) 173)
	(block-present stone0)
	(= (x stone0) -264.0)
	(= (y stone0) 82.0)
	(= (z stone0) 169.0)
	(= (block-hits stone0) 0)
	(block-present dirt0)
	(= (x dirt0) -264.0)
	(= (y dirt0) 83.0)
	(= (z dirt0) 176.0)
	(= (block-hits dirt0) 0)
	(block-present grass_block0)
	(= (x grass_block0) -256.0)
	(= (y grass_block0) 88.0)
	(= (z grass_block0) 177.0)
	(= (block-hits grass_block0) 0)
	(block-present leaves0)
	(= (x leaves0) -264.0)
	(= (y leaves0) 86.0)
	(= (z leaves0) 177.0)
	(= (block-hits leaves0) 0)
	(block-present leaves1)
	(= (x leaves1) -264.0)
	(= (y leaves1) 87.0)
	(= (z leaves1) 177.0)
	(= (block-hits leaves1) 0)
	(block-present leaves2)
	(= (x leaves2) -263.0)
	(= (y leaves2) 86.0)
	(= (z leaves2) 177.0)
	(= (block-hits leaves2) 0)
	(block-present leaves3)
	(= (x leaves3) -263.0)
	(= (y leaves3) 87.0)
	(= (z leaves3) 177.0)
	(= (block-hits leaves3) 0)
	(block-present leaves4)
	(= (x leaves4) -262.0)
	(= (y leaves4) 87.0)
	(= (z leaves4) 177.0)
	(= (block-hits leaves4) 0)
	(block-present grass0)
	(= (x grass0) -262.0)
	(= (y grass0) 86.0)
	(= (z grass0) 173.0)
	(= (block-hits grass0) 0)
	(block-present grass1)
	(= (x grass1) -259.0)
	(= (y grass1) 86.0)
	(= (z grass1) 170.0)
	(= (block-hits grass1) 0)
	(block-present grass2)
	(= (x grass2) -257.0)
	(= (y grass2) 86.0)
	(= (z grass2) 170.0)
	(= (block-hits grass2) 0)
	(block-present grass3)
	(= (x grass3) -257.0)
	(= (y grass3) 86.0)
	(= (z grass3) 171.0)
	(= (block-hits grass3) 0)
	(block-present obsidian0)
	(= (x obsidian0) -260.0)
	(= (y obsidian0) 86.0)
	(= (z obsidian0) 175.0)
	(= (block-hits obsidian0) 0)
	(block-present coal_ore0)
	(= (x coal_ore0) -256.0)
	(= (y coal_ore0) 85.0)
	(= (z coal_ore0) 177.0)
	(= (block-hits coal_ore0) 0)
)
(:goal (>= (agent-num-oak-log steve) 1))
)
