(define (domain Build_Well_Easy)
(:requirements :typing :negative-preconditions :universal-preconditions :existential-preconditions)
(:constants
	position-7 position-6 position-5 position-4 position-3 position-2 position-1 position0 position1 position2 position3 position4 position5 position6 position7 position8 position9 - position
	count0 count1 count2 count3 count4 count5 count6 count7 count8 count9 count10 count11 count12 count13 count14 count15 count16 count17 count18 count19 count20 count21 count22 count23 count24 count25 count26 count27 count28 count29 count30 count31 count32 count33 count34 count35 count36 count37 count38 count39 count40 count41 count42 count43 count44 count45 count46 count47 count48 count49 count50 count51 count52 count53 count54 count55 count56 count57 count58 count59 count60 count61 count62 count63 count64 - count
)
(:types
	locatable int - object
	agent block item - locatable
	count position - int
	bedrock destructible-block - block
	glowstone fence planks grass_block cobblestone stone - item
	glowstone-block fence-block planks-block grass_block-block cobblestone-block stone-block - destructible-block
)
(:predicates
	(goal-achieved ?ag - agent)
	(agent-has-n-planks ?ag - agent ?n - count)
	(agent-has-n-fence ?ag - agent ?n - count)
	(agent-has-n-grass_block ?ag - agent ?n - count)
	(are-seq ?x1 - int ?x2 - int)
	(is-any-item-at-position ?x - position ?y - position ?z - position)
	(agent-has-n-glowstone ?ag - agent ?n - count)
	(at-y ?l - locatable ?y - position)
	(block-present ?b - block)
	(not-equal ?x1 - int ?x2 - int)
	(agent-alive ?ag - agent)
	(at-z ?l - locatable ?z - position)
	(item-present ?i - item)
	(agent-has-n-stone ?ag - agent ?n - count)
	(agent-has-n-cobblestone ?ag - agent ?n - count)
	(is-any-block-at-position ?x - position ?y - position ?z - position)
	(at-x ?l - locatable ?x - position)
)

(:action move-north
	:parameters (?ag - agent ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
)
)


(:action jumpup-north
	:parameters (?ag - agent ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_up)
)
)


(:action jumpdown-north
	:parameters (?ag - agent ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (not (is-any-item-at-position ?x ?y_2_down ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_2_down)
)
)


(:action break-planks-north
	:parameters (?ag - agent ?b - planks-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-planks-north
	:parameters (?ag - agent ?b - planks-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-planks-north
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-planks ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-planks-north
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-planks-north
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-stone-north
	:parameters (?ag - agent ?b - stone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-stone-north
	:parameters (?ag - agent ?b - stone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-stone-north
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-stone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-stone-north
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-stone-north
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-grass_block-north
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-grass_block-north
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-grass_block-north
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-grass_block-north
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-grass_block-north
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-glowstone-north
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-glowstone-north
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-glowstone-north
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-glowstone-north
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-glowstone-north
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-cobblestone-north
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-cobblestone-north
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-cobblestone-north
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-cobblestone-north
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-cobblestone-north
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-fence-north
	:parameters (?ag - agent ?b - fence-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z_front ?z)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-fence-north
	:parameters (?ag - agent ?b - fence-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z_front ?z)
 (are-seq ?n_end ?n_start)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-fence-north
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-fence ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-fence-north
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-fence-north
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_end ?z_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action move-south
	:parameters (?ag - agent ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
)
)


(:action jumpup-south
	:parameters (?ag - agent ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_up)
)
)


(:action jumpdown-south
	:parameters (?ag - agent ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (not (is-any-item-at-position ?x ?y_2_down ?z_end)
))
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_2_down)
)
)


(:action break-planks-south
	:parameters (?ag - agent ?b - planks-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-planks-south
	:parameters (?ag - agent ?b - planks-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-planks-south
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-planks ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-planks-south
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-planks-south
	:parameters (?ag - agent ?i - planks ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-stone-south
	:parameters (?ag - agent ?b - stone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-stone-south
	:parameters (?ag - agent ?b - stone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-stone-south
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-stone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-stone-south
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-stone-south
	:parameters (?ag - agent ?i - stone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-grass_block-south
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-grass_block-south
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-grass_block-south
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-grass_block-south
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-grass_block-south
	:parameters (?ag - agent ?i - grass_block ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-glowstone-south
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-glowstone-south
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-glowstone-south
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-glowstone-south
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-glowstone-south
	:parameters (?ag - agent ?i - glowstone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-cobblestone-south
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-cobblestone-south
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-cobblestone-south
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-cobblestone-south
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-cobblestone-south
	:parameters (?ag - agent ?i - cobblestone ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action break-fence-south
	:parameters (?ag - agent ?b - fence-block ?x - position ?y - position ?y_up - position ?z - position ?z_front - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (are-seq ?z ?z_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x ?y_up ?z_front)
) (are-seq ?n_start ?n_end)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z_front)
) (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (is-any-block-at-position ?x ?y ?z_front)
))
)


(:action place-fence-south
	:parameters (?ag - agent ?b - fence-block ?x - position ?y - position ?y_down - position ?z - position ?z_front - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_front)
) (not (is-any-block-at-position ?x ?y ?z_front)
) (not (is-any-item-at-position ?x ?y ?z_front)
) (are-seq ?y_down ?y)
 (are-seq ?z ?z_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x)
 (at-y ?b ?y)
 (at-z ?b ?z_front)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (is-any-block-at-position ?x ?y ?z_front)
)
)


(:action move_and_pickup-fence-south
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_down)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (at-z ?ag ?z_end)
 (not (agent-has-n-fence ?ag ?n_start)
) (not (at-x ?i ?x)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x ?y_down ?z_end)
))
)


(:action jumpup_and_pickup-fence-south
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_up_up - position ?y_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up_up ?z_end)
) (not (is-any-block-at-position ?x ?y_up ?z_start)
) (not (is-any-block-at-position ?x ?y_up_up ?z_start)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_up)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action jumpdown_and_pickup-fence-south
	:parameters (?ag - agent ?i - fence ?x - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?z_start - position ?z_end - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z_start)
 (are-seq ?z_start ?z_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x ?y_up ?z_end)
) (not (is-any-block-at-position ?x ?y_down ?z_end)
) (not (is-any-block-at-position ?x ?y_2_down ?z_end)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z_end)
) (and 
(item-present ?i)
 (at-x ?i ?x)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z_end)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-z ?ag ?z_start)
) (not (at-y ?ag ?y_down)
) (at-z ?ag ?z_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z_end)
) (not (is-any-item-at-position ?x ?y_up ?z_end)
))
)


(:action move-east
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
)
)


(:action jumpup-east
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_up)
)
)


(:action jumpdown-east
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (not (is-any-item-at-position ?x_end ?y_2_down ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_2_down)
)
)


(:action break-planks-east
	:parameters (?ag - agent ?b - planks-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-planks-east
	:parameters (?ag - agent ?b - planks-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-planks-east
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-planks ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-planks-east
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-planks-east
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-stone-east
	:parameters (?ag - agent ?b - stone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-stone-east
	:parameters (?ag - agent ?b - stone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-stone-east
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-stone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-stone-east
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-stone-east
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-grass_block-east
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-grass_block-east
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-grass_block-east
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-grass_block-east
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-grass_block-east
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-glowstone-east
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-glowstone-east
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-glowstone-east
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-glowstone-east
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-glowstone-east
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-cobblestone-east
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-cobblestone-east
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-cobblestone-east
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-cobblestone-east
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-cobblestone-east
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-fence-east
	:parameters (?ag - agent ?b - fence-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x ?x_front)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-fence-east
	:parameters (?ag - agent ?b - fence-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x ?x_front)
 (are-seq ?n_end ?n_start)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-fence-east
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-fence ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-fence-east
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-fence-east
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_start ?x_end)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action move-west
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
)
)


(:action jumpup-west
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_up)
)
)


(:action jumpdown-west
	:parameters (?ag - agent ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (not (is-any-item-at-position ?x_end ?y_2_down ?z)
))
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (at-y ?ag ?y_down)
) (at-y ?ag ?y_2_down)
)
)


(:action break-planks-west
	:parameters (?ag - agent ?b - planks-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-planks-west
	:parameters (?ag - agent ?b - planks-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-planks-west
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-planks ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-planks-west
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-planks-west
	:parameters (?ag - agent ?i - planks ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-planks ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-planks ?ag ?n_start)
) (agent-has-n-planks ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-stone-west
	:parameters (?ag - agent ?b - stone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-stone-west
	:parameters (?ag - agent ?b - stone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-stone-west
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-stone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-stone-west
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-stone-west
	:parameters (?ag - agent ?i - stone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-stone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-stone ?ag ?n_start)
) (agent-has-n-stone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-grass_block-west
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-grass_block-west
	:parameters (?ag - agent ?b - grass_block-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-grass_block-west
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-grass_block-west
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-grass_block-west
	:parameters (?ag - agent ?i - grass_block ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-grass_block ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-grass_block ?ag ?n_start)
) (agent-has-n-grass_block ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-glowstone-west
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-glowstone-west
	:parameters (?ag - agent ?b - glowstone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-glowstone-west
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-glowstone-west
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-glowstone-west
	:parameters (?ag - agent ?i - glowstone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-glowstone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-glowstone ?ag ?n_start)
) (agent-has-n-glowstone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-cobblestone-west
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-cobblestone-west
	:parameters (?ag - agent ?b - cobblestone-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-cobblestone-west
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-cobblestone-west
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-cobblestone-west
	:parameters (?ag - agent ?i - cobblestone ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-cobblestone ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-cobblestone ?ag ?n_start)
) (agent-has-n-cobblestone ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action break-fence-west
	:parameters (?ag - agent ?b - fence-block ?x - position ?x_front - position ?y - position ?y_up - position ?z - position ?n_start - count ?n_end - count)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (are-seq ?x_front ?x)
 (are-seq ?y ?y_up)
 (block-present ?b) (not (is-any-item-at-position ?x_front ?y_up ?z)
) (are-seq ?n_start ?n_end)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (block-present ?b)) (not (at-x ?b ?x_front)
) (not (at-y ?b ?y)
) (not (at-z ?b ?z)
) (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (is-any-block-at-position ?x_front ?y ?z)
))
)


(:action place-fence-west
	:parameters (?ag - agent ?b - fence-block ?x - position ?x_front - position ?y - position ?y_down - position ?z - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x)
 (at-y ?ag ?y)
 (at-z ?ag ?z)
 (not (block-present ?b)) (and 
(block-present ?b1)
 (at-x ?b1 ?x_front)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_front ?y ?z)
) (not (is-any-item-at-position ?x_front ?y ?z)
) (are-seq ?y_down ?y)
 (are-seq ?x_front ?x)
 (are-seq ?n_end ?n_start)
 (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(block-present ?b) (at-x ?b ?x_front)
 (at-y ?b ?y)
 (at-z ?b ?z)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (is-any-block-at-position ?x_front ?y ?z)
)
)


(:action move_and_pickup-fence-west
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?n_start ?n_end)
 (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_2_down)
 (at-z ?b1 ?z)
) (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_down)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (at-x ?ag ?x_end)
 (not (agent-has-n-fence ?ag ?n_start)
) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_down)
) (not (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (is-any-item-at-position ?x_end ?y_down ?z)
))
)


(:action jumpup_and_pickup-fence-west
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_up_up - position ?y_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_down ?y_up)
 (are-seq ?y_up ?y_up_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_up_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up ?z)
) (not (is-any-block-at-position ?x_start ?y_up_up ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_up)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_up)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action jumpdown_and_pickup-fence-west
	:parameters (?ag - agent ?i - fence ?z - position ?x_start - position ?x_end - position ?y_up - position ?y_down - position ?y_2_down - position ?y_3_down - position ?n_start - count ?n_end - count ?b1 - block)
	:precondition (and 
(agent-alive ?ag)
 (at-x ?ag ?x_start)
 (at-y ?ag ?y_down)
 (at-z ?ag ?z)
 (are-seq ?x_end ?x_start)
 (are-seq ?y_3_down ?y_2_down)
 (are-seq ?y_2_down ?y_down)
 (are-seq ?y_down ?y_up)
 (are-seq ?n_start ?n_end)
 (not (is-any-block-at-position ?x_end ?y_up ?z)
) (not (is-any-block-at-position ?x_end ?y_down ?z)
) (not (is-any-block-at-position ?x_end ?y_2_down ?z)
) (and 
(block-present ?b1)
 (at-x ?b1 ?x_end)
 (at-y ?b1 ?y_3_down)
 (at-z ?b1 ?z)
) (and 
(item-present ?i)
 (at-x ?i ?x_end)
 (at-y ?i ?y_2_down)
 (at-z ?i ?z)
) (agent-has-n-fence ?ag ?n_start)
)
	:effect (and 
(not (at-x ?ag ?x_start)
) (not (at-y ?ag ?y_down)
) (at-x ?ag ?x_end)
 (at-y ?ag ?y_2_down)
 (not (agent-has-n-fence ?ag ?n_start)
) (agent-has-n-fence ?ag ?n_end)
 (not (item-present ?i)) (not (at-x ?i ?x_end)
) (not (at-y ?i ?y_up)
) (not (at-z ?i ?z)
) (not (is-any-item-at-position ?x_end ?y_up ?z)
))
)


(:action checkgoal
	:parameters (?ag - agent ?b1 - block ?b2 - block ?b3 - block ?b4 - block ?b5 - block ?b6 - block ?b7 - block ?b8 - block ?b9 - block ?b10 - block ?b11 - block ?b12 - block ?b13 - block ?b14 - block ?b15 - block ?b16 - block ?b17 - block ?b18 - block ?b19 - block ?b20 - block ?b21 - block ?b22 - block ?b23 - block ?b24 - block ?b25 - block ?b26 - block)
	:precondition (and 
(agent-alive ?ag)
 (and 
(block-present ?b1)
 (at-x ?b1 position-3)
 (at-y ?b1 position4)
 (at-z ?b1 position2)
)
	(and 
(block-present ?b2)
 (at-x ?b2 position-3)
 (at-y ?b2 position4)
 (at-z ?b2 position3)
)
	(and 
(block-present ?b3)
 (at-x ?b3 position-3)
 (at-y ?b3 position4)
 (at-z ?b3 position4)
)
	(and 
(block-present ?b4)
 (at-x ?b4 position-2)
 (at-y ?b4 position4)
 (at-z ?b4 position2)
)
	(and 
(block-present ?b5)
 (at-x ?b5 position-2)
 (at-y ?b5 position4)
 (at-z ?b5 position3)
)
	(and 
(block-present ?b6)
 (at-x ?b6 position-2)
 (at-y ?b6 position4)
 (at-z ?b6 position4)
)
	(and 
(block-present ?b7)
 (at-x ?b7 position-1)
 (at-y ?b7 position4)
 (at-z ?b7 position2)
)
	(and 
(block-present ?b8)
 (at-x ?b8 position-1)
 (at-y ?b8 position4)
 (at-z ?b8 position3)
)
	(and 
(block-present ?b9)
 (at-x ?b9 position-1)
 (at-y ?b9 position4)
 (at-z ?b9 position4)
)
	(and 
(block-present ?b10)
 (at-x ?b10 position-3)
 (at-y ?b10 position7)
 (at-z ?b10 position2)
)
	(and 
(block-present ?b11)
 (at-x ?b11 position-3)
 (at-y ?b11 position7)
 (at-z ?b11 position3)
)
	(and 
(block-present ?b12)
 (at-x ?b12 position-3)
 (at-y ?b12 position7)
 (at-z ?b12 position4)
)
	(and 
(block-present ?b13)
 (at-x ?b13 position-2)
 (at-y ?b13 position7)
 (at-z ?b13 position2)
)
	(and 
(block-present ?b14)
 (at-x ?b14 position-2)
 (at-y ?b14 position7)
 (at-z ?b14 position4)
)
	(and 
(block-present ?b15)
 (at-x ?b15 position-1)
 (at-y ?b15 position7)
 (at-z ?b15 position2)
)
	(and 
(block-present ?b16)
 (at-x ?b16 position-1)
 (at-y ?b16 position7)
 (at-z ?b16 position3)
)
	(and 
(block-present ?b17)
 (at-x ?b17 position-1)
 (at-y ?b17 position7)
 (at-z ?b17 position4)
)
	(and 
(block-present ?b18)
 (at-x ?b18 position-3)
 (at-y ?b18 position5)
 (at-z ?b18 position2)
)
	(and 
(block-present ?b19)
 (at-x ?b19 position-3)
 (at-y ?b19 position6)
 (at-z ?b19 position2)
)
	(and 
(block-present ?b20)
 (at-x ?b20 position-3)
 (at-y ?b20 position5)
 (at-z ?b20 position4)
)
	(and 
(block-present ?b21)
 (at-x ?b21 position-3)
 (at-y ?b21 position6)
 (at-z ?b21 position4)
)
	(and 
(block-present ?b22)
 (at-x ?b22 position-1)
 (at-y ?b22 position5)
 (at-z ?b22 position2)
)
	(and 
(block-present ?b23)
 (at-x ?b23 position-1)
 (at-y ?b23 position6)
 (at-z ?b23 position2)
)
	(and 
(block-present ?b24)
 (at-x ?b24 position-1)
 (at-y ?b24 position5)
 (at-z ?b24 position4)
)
	(and 
(block-present ?b25)
 (at-x ?b25 position-1)
 (at-y ?b25 position6)
 (at-z ?b25 position4)
)
	(and 
(block-present ?b26)
 (at-x ?b26 position-2)
 (at-y ?b26 position7)
 (at-z ?b26 position3)
)
	)
	:effect (and 
(goal-achieved ?ag))
)


)